/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.0.9 public/console.gltf -t
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube004: THREE.Mesh
    Cube004_1: THREE.Mesh
    Cube005: THREE.Mesh
    Cube005_1: THREE.Mesh
    ControlsLeft: THREE.Mesh
    ButtonRight: THREE.Mesh
    ControlsBottom: THREE.Mesh
    LED_Button: THREE.Mesh
  }
  materials: {
    Border: THREE.MeshStandardMaterial
    Screen: THREE.MeshStandardMaterial
    Superstructure: THREE.MeshStandardMaterial
    LED: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/console.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube004.geometry} material={materials.Border} />
      <mesh geometry={nodes.Cube004_1.geometry} material={materials.Screen} />
      <mesh geometry={nodes.Cube005.geometry} material={materials.Superstructure} />
      <mesh geometry={nodes.Cube005_1.geometry} material={materials.Border} />
      <mesh geometry={nodes.ControlsLeft.geometry} material={materials.Border} />
      <mesh geometry={nodes.ButtonRight.geometry} material={materials.Border} />
      <mesh geometry={nodes.ControlsBottom.geometry} material={materials.Border} />
      <mesh geometry={nodes.LED_Button.geometry} material={materials.LED} />
    </group>
  )
}

useGLTF.preload('/console.gltf')
